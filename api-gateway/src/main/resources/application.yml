server:
  port: 8025
service-url:
  user-service: http://localhost:8002
spring:
  cloud:
    gateway:
      routes:
        - id: path_route #路由的ID             ##Route Predicate 的使用
          uri: ${service-url.user-service}/user/{id} #匹配后路由地址
          predicates: # 断言，路径相匹配的进行路由
            - Path=/user/{id}
        - id: after_route #在指定时间之后的请求会匹配该路由
          uri: ${service-url.user-service}
          predicates:
            - After=2019-09-24T16:30:00+08:00[Asia/Shanghai]
        - id: before_route #在指定时间之前的请求会匹配该路由
          uri: ${service-url.user-service}
          predicates:
            - Before=2019-09-24T16:30:00+08:00[Asia/Shanghai]
        - id: before_route2 #在指定时间区间内的请求会匹配该路由
          uri: ${service-url.user-service}
          predicates:
            - Between=2019-09-24T16:30:00+08:00[Asia/Shanghai], 2019-09-25T16:30:00+08:00[Asia/Shanghai]
        - id: cookie_route #带有指定Cookie的请求会匹配该路由
          uri: ${service-url.user-service}
          predicates:
            - Cookie=username,macro
        - id: header_route #带有指定请求头的请求会匹配该路由
          uri: ${service-url.user-service}
          predicates:
            - Header=X-Request-Id, \d+
        - id: host_route #带有指定Host的请求会匹配该路由
          uri: ${service-url.user-service}
          predicates:
            - Host=**.macrozheng.com
        - id: method_route #发送指定方法的请求会匹配该路由
          uri: ${service-url.user-service}
          predicates:
            - Method=GET
        - id: query_route # 带指定查询参数的请求可以匹配该路由
          uri: ${service-url.user-service}/user/getByUsername
          predicates:
            - Query=username
        - id: remoteaddr_route #从指定远程地址发起的请求可以匹配该路由
          uri: ${service-url.user-service}
          predicates:
            - RemoteAddr=192.168.1.1/24
        - id: weight_high # 使用权重来路由相应请求，以下表示有80%的请求会被路由到localhost:8201，20%会被路由到localhost:8202
          uri: http://localhost:8201
          predicates:
            - Weight=group1, 8
        - id: weight_low
          uri: http://localhost:8202
          predicates:
            - Weight=group1, 2
        - id: add_request_parameter_route  #给请求添加参数的过滤器   ##Route Filter 的使用
          uri: http://localhost:8201
          filters:
            - AddRequestParameter=username, macro
          predicates:
            - Method=GET
        - id: strip_prefix_route  #对指定数量的路径前缀进行去除的过滤器。
          uri: http://localhost:8201
          predicates:
            - Path=/user-service/**
          filters:
            - StripPrefix=2
        - id: prefix_path_route  #与StripPrefix过滤器恰好相反，会对原有路径进行增加操作的过滤器。
          uri: http://localhost:8201
          predicates:
            - Method=GET
          filters:
            - PrefixPath=/user